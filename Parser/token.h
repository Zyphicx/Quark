#ifndef TOKEN_H
#define TOKEN_H

#include <stddef.h>
#include <time.h> //REMOVE THIS!!! IT IS JUST FOR TIME TESTING!!!!!!!!!!!!
#include <unistd.h>

/*
OPTIONAL, OR, LOOP and MACRO are there for building grammar linked lists.
*/

enum TokenType {UNDEFINED, NUMBER, IDENTIFIER, STRING_CONST, ATTRIBUTE, BREAK, CASE, CLASS, CONST, CONTINUE, DOUBLE, ELSE, ENUM, FALS,
				FOR, FROM, IF, IS, INCLUDE, INTEGER, LIST, MATCH, RETURN, SELF, SUPER, STRING, SWITCH, TRU, TUPLE, TYPE, VOID, WHILE, WITH,
				PLUS, MINUS, STAR, SLASH, PERCENT, CARET, GREATER, LESS, EXCL, QUESTION, EQUALS, AMPER, VBAR,
				L_PAREN, R_PAREN, L_CURLY, R_CURLY, L_SQUARE, R_SQUARE, COMMA, COLON, DOT, SEMICOLON, PLUS_EQUALS, MINUS_EQUALS,
				STAR_EQUALS, SLASH_EQUALS, PERCENT_EQUALS, CARET_EQUALS, GREATER_EQUALS, LESS_EQUALS, EXCL_EQUALS,
				EQUALS_EQUALS, AMPER_AMPER, VBAR_VBAR, PLUS_PLUS, MINUS_MINUS, MINUS_GREATER, HASH, OPTIONAL, OR, LOOP, MACRO};

typedef struct{
	const char *key;
	const enum TokenType type;
} TokenName;

typedef struct token{
	enum TokenType type;
	char *value;
} Token;

#endif
